{"version":3,"sources":["Coin.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["Coin","name","image","symbol","price","volume","priceChange","marketcap","className","src","alt","toLocaleString","toFixed","Header","props","type","onClick","key","requestSort","sortConfig","direction","App","useState","coins","setCoins","search","setSearch","setConfig","useEffect","axios","get","then","res","data","console","log","catch","error","sort","a","b","filteredCoins","filter","coin","toLowerCase","includes","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","total_volume","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01ccfe51.chunk.js","sourcesContent":["import React from 'react'\nimport './Coin.css'\n\nconst Coin = ({name, image, symbol, price, volume, priceChange, marketcap}) => {\n    return (\n        <div className=\"coin-container\">\n            <div className=\"coin-row\">\n                <div className=\"coin\">\n                    <img src={image} alt='crypto'/>\n                    <h1>{name}</h1>\n                    <p className=\"coin-symbol\">{symbol}</p>\n                </div>\n                <div className=\"coin-data\">\n                    <p className=\"coin-price\">${price}</p>\n                    <p className=\"coin-volume\">${volume.toLocaleString()}</p>\n                    {priceChange < 0 ? (\n                        <p className=\"coin-percent red\">{priceChange.toFixed(2)}%</p>\n                        ) : (\n                        <p className=\"coin-percent green\">{priceChange.toFixed(2)}%</p>\n                    )}\n                    <p className=\"coin-marketcap\">\n                        ${marketcap.toLocaleString()}\n                    </p>\n            \n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Coin\n","\nimport './Header.css'\n\nconst Header = (props) => {\n    \n  return(\n    <div className=\"header-container\">\n    <div className=\"header-row\">\n        <div className=\"header\">\n            <p> Name </p>\n            <button className=\"button\" \n                    type=\"button\" \n                    onClick={(key) => props.requestSort('name')}> \n                    {(props.sortConfig.direction === \"ascending\" && props.sortConfig.key === 'name') ? \"▲\" : \"▼\"} \n            </button>\n            <p className=\"header-symbol\">Symbol</p>\n            <button className=\"button\" \n                    type=\"button\" \n                    onClick={(key) => props.requestSort('symbol')}> \n                    {(props.sortConfig.direction === \"ascending\" && props.sortConfig.key === 'symbol') ? \"▲\" : \"▼\"}\n            </button>\n        </div>\n        <div className=\"header-data\">\n            <p className=\"header-price\">Price</p>\n            <button className=\"button\" \n                    type=\"button\" \n                    onClick={(key) => props.requestSort('current_price')}> \n                    {(props.sortConfig.direction === \"ascending\" && props.sortConfig.key === 'current_price') ? \"▲\" : \"▼\"}\n            </button>\n            <p className=\"header-volume\">Volume</p>\n            <button className=\"button\" \n                    type=\"button\" \n                    onClick={(key) => props.requestSort('total_volume')}> \n                    {(props.sortConfig.direction === \"ascending\" && props.sortConfig.key === 'total_volume') ? \"▲\" : \"▼\"}\n            </button>\n            <p className=\"header-percent\">% Change</p>\n            <button className=\"button\" \n                    type=\"button\" \n                    onClick={(key) => props.requestSort('price_change_percentage_24h')}> \n                    {(props.sortConfig.direction === \"ascending\" && props.sortConfig.key === 'price_change_percentage_24h')? \"▲\" : \"▼\"}\n            </button>\n            <p className=\"header-marketcap\">Market Cap</p>\n            <button className=\"button\" \n                    type=\"button\" \n                    onClick={(key) => props.requestSort('market_cap')}> \n                    {(props.sortConfig.direction === \"ascending\" && props.sortConfig.key === 'market_cap') ? \"▲\" : \"▼\"}\n            </button>\n        </div>\n    </div>\n</div>\n    )\n}\n\nexport default Header","\nimport {useState, useEffect} from 'react'\nimport './App.css';\nimport Coin from './Coin';\nimport Header from './Header';\nimport axios from 'axios'\n\n\n\nfunction App() {\n  \n  const [coins, setCoins] = useState([])\n  const [search, setSearch] = useState('')\n  const [sortConfig, setConfig] = useState({})\n\n  useEffect(()=> {\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n    .then(res => {\n      setCoins(res.data)\n      console.log(res.data)\n    }).catch(error => console.log(error))\n  }, []);\n\n  const handleChange = e => {\n    setSearch(e.target.value)\n  }\n\n  const sortedCoins = coins.sort((a, b) => {\n    if (a[sortConfig.key] < b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? -1 : 1;\n    }\n    if (a[sortConfig.key] > b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? 1 : -1;\n    }\n    return 0;\n  });\n\n  const requestSort = key => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setConfig({ key, direction });\n  }\n  \n  const filteredCoins = coins.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase()))\n\n  return (\n    <div className=\"coin-app\">\n      <div className=\"coin-search\">\n        <h1 className=\"coin-text\">Search a currency</h1>\n        <form>\n          <input type=\"text\" placeholder=\"Search\"\n          className=\"coin-input\" onChange={handleChange}/>\n        </form>\n        <Header requestSort={requestSort}\n        sortConfig={sortConfig}/>\n      </div>\n      {filteredCoins.map(coin => {\n        return (\n          <Coin \n          key={coin.id} \n          name={coin.name} \n          image={coin.image} \n          symbol={coin.symbol} \n          marketcap={coin.market_cap} \n          price={coin.current_price} \n          priceChange={coin.price_change_percentage_24h}\n          volume={coin.total_volume}\n          />\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}